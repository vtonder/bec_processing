from matplotlib import pyplot as plt
import numpy as np
from constants import frequencies, a4_textheight, a4_textwidth, thesis_font

# Setup fonts and sizes for publication, based on page dimensions in inches
textwidth =  a4_textwidth
textheight = a4_textheight
font_size = thesis_font
# groups are like plt.figure plt.legend etc
plt.rc('font', size=font_size, family='serif')
plt.rc('pdf', fonttype=42)
#plt.rc('axes', titlesize=14, labelsize=14)
plt.rc('axes', titlesize=font_size, labelsize=font_size)
plt.rc(('xtick', 'ytick'), labelsize=font_size)
plt.rc('legend', fontsize=font_size)
plt.rc('lines', markersize=5)
# The following should only be used for beamer
# plt.rc('figure', figsize=(0.9 * textwidth, 0.8 * textheight), facecolor='w')
figheight = 0.65 * textwidth
plt.rc('mathtext', fontset='cm')
# to get this working needed to do: sudo apt install cm-super
plt.rc("text", usetex = True)
plt.rc("figure", figsize = (textwidth, figheight))


DIR = '1569'
means_0x = np.load('/home/vereese/git/phd_data/mean_analysis/'+DIR+'/means_0x_1024.npy')
var_0x = np.load('/home/vereese/git/phd_data/mean_analysis/'+DIR+'/var_0x_1024.npy')
std_err_0x = np.load('/home/vereese/git/phd_data/mean_analysis/'+DIR+'/std_err_0x_1024.npy')

means_0y = np.load('/home/vereese/git/phd_data/mean_analysis/'+DIR+'/means_0y_1024.npy')
var_0y = np.load('/home/vereese/git/phd_data/mean_analysis/'+DIR+'/var_0y_1024.npy')
std_err_0y = np.load('/home/vereese/git/phd_data/mean_analysis/'+DIR+'/std_err_0y_1024.npy')

plt.figure(0)
plt.plot(frequencies[1:], means_0x[1:, 0]/std_err_0x[1:, 0])
plt.hlines(y=3, xmin=frequencies[1], xmax=frequencies[-1],color = 'r', linestyle = 'dashed')
plt.hlines(y=-3, xmin=frequencies[1], xmax=frequencies[-1],color = 'r', linestyle = 'dashed')
plt.xlim([frequencies[1], frequencies[-1]])
plt.xlabel("Frequency MHz")
plt.ylabel("Re\{H-pol mean / SEM\}")
plt.grid()
plt.savefig('/home/vereese/Documents/PhD/ThesisTemplate/Figures/mean_re_div_sem_x.pdf', transparent=True, bbox_inches='tight')

plt.figure(1)
plt.plot(frequencies[1:], means_0x[1:, 0], label='mean')
plt.plot(frequencies[1:], 3*std_err_0x[1:, 0], label='+3*SEM')
plt.plot(frequencies[1:], -3*std_err_0x[1:, 0], label='-3*SEM')
plt.xlim([frequencies[1], frequencies[-1]])
plt.xlabel("Frequency MHz")
plt.ylabel("Re\{H-pol mean and 3 SEM\}")
plt.legend()
plt.grid()
plt.savefig('/home/vereese/Documents/PhD/ThesisTemplate/Figures/mean_re_3sem_x.pdf', transparent=True, bbox_inches='tight')

plt.figure(2)
plt.plot(frequencies[1:], means_0x[1:, 1]/std_err_0x[1:, 1])
plt.hlines(y=3, xmin=frequencies[1], xmax=frequencies[-1], color = 'r', linestyle = 'dashed')
plt.hlines(y=-3, xmin=frequencies[1], xmax=frequencies[-1], color = 'r', linestyle = 'dashed')
plt.xlim([frequencies[1], frequencies[-1]])
plt.xlabel("Frequency MHz")
plt.ylabel("Im\{H-pol mean / SEM\}")
#plt.title("H-pol Imag mean/SEM")
plt.grid()
plt.savefig('/home/vereese/Documents/PhD/ThesisTemplate/Figures/mean_im_div_sem_x.pdf', transparent=True, bbox_inches='tight')

plt.figure(3)
plt.plot(frequencies[1:], means_0x[1:, 1], label='mean')
plt.plot(frequencies[1:], 3*std_err_0x[1:, 1], label='3SEM')
plt.plot(frequencies[1:], -3*std_err_0x[1:, 1], label='-3SEM')
plt.xlim([frequencies[1], frequencies[-1]])
plt.xlabel("Frequency MHz")
plt.ylabel("Im\{H-pol mean and 3 SEM\}")
plt.legend()
plt.grid()
plt.savefig('/home/vereese/Documents/PhD/ThesisTemplate/Figures/mean_im_3sem_x.pdf', transparent=True, bbox_inches='tight')

plt.figure(4)
plt.plot(frequencies[1:], np.sqrt(var_0x[1:, 1]))
plt.xlim([frequencies[1], frequencies[-1]])
plt.xlabel("Frequency MHz")
plt.ylabel("H-pol Imag std deviation")
plt.legend()
plt.xlabel("Frequency MHz")
plt.grid()

plt.figure(5)
plt.plot(frequencies[1:], means_0y[1:, 0]/std_err_0y[1:, 0])
plt.hlines(y=3, xmin=frequencies[1], xmax=frequencies[-1],color = 'r', linestyle = 'dashed')
plt.hlines(y=-3, xmin=frequencies[1], xmax=frequencies[-1],color = 'r', linestyle = 'dashed')
plt.xlim([frequencies[1], frequencies[-1]])
plt.xlabel("Frequency MHz")
plt.ylabel("Re\{V-pol mean / SEM\}")
#plt.title("V-pol Real mean/SEM")
plt.grid()
plt.savefig('/home/vereese/Documents/PhD/ThesisTemplate/Figures/mean_re_div_sem_y.pdf', transparent=True, bbox_inches='tight')

plt.figure(6)
plt.plot(frequencies[1:], means_0y[1:, 0], label='mean')
plt.plot(frequencies[1:], 3*std_err_0y[1:, 0], label='+3SEM')
plt.plot(frequencies[1:], -3*std_err_0y[1:, 0], label='-3SEM')
plt.xlim([frequencies[1], frequencies[-1]])
plt.xlabel("Frequency MHz")
plt.ylabel("Re\{V-pol mean and 3 SEM\}")
plt.legend()
plt.grid()
plt.savefig('/home/vereese/Documents/PhD/ThesisTemplate/Figures/mean_re_3sem_y.pdf', transparent=True, bbox_inches='tight')

plt.figure(7)
plt.plot(frequencies[1:], means_0y[1:, 1]/std_err_0y[1:, 1])
plt.hlines(y=3, xmin=frequencies[1], xmax=frequencies[-1], color = 'r', linestyle = 'dashed')
plt.hlines(y=-3, xmin=frequencies[1], xmax=frequencies[-1], color = 'r', linestyle = 'dashed')
plt.xlim([frequencies[1], frequencies[-1]])
plt.xlabel("Frequency MHz")
plt.ylabel("Im\{V-pol mean / SEM\}")
#plt.title("V-pol Imag mean/SEM")
plt.grid()
plt.savefig('/home/vereese/Documents/PhD/ThesisTemplate/Figures/mean_im_div_sem_y.pdf', transparent=True, bbox_inches='tight')

plt.figure(8)
plt.plot(frequencies[1:], means_0y[1:, 1], label='mean')
plt.plot(frequencies[1:], 3*std_err_0y[1:, 1], label='3SEM')
plt.plot(frequencies[1:], -3*std_err_0y[1:, 1], label='-3SEM')
plt.xlim([frequencies[1], frequencies[-1]])
plt.xlabel("Frequency MHz")
plt.ylabel("Im\{V-pol mean and 3 SEM\}")
plt.legend()
plt.grid()
plt.savefig('/home/vereese/Documents/PhD/ThesisTemplate/Figures/mean_im_3sem_y.pdf', transparent=True, bbox_inches='tight')

plt.figure(9)
plt.plot(frequencies[1:], np.sqrt(var_0y[1:, 1]))
plt.xlim([frequencies[1], frequencies[-1]])
plt.xlabel("Frequency MHz")
plt.ylabel("Im\{V-pol std deviation\}")
plt.legend()
plt.xlabel("Frequency MHz")
plt.grid()

plt.show()