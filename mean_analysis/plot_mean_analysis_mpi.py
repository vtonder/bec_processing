from matplotlib import pyplot as plt
import numpy as np
from constants import frequencies

font = {'family': 'STIXGeneral',
        'size': 26}
plt.rc('font', **font)

DIR = '1569'
means_0x = np.load('/home/vereese/git/phd_data/mean_analysis/'+DIR+'/means_0x_1024.npy')
var_0x = np.load('/home/vereese/git/phd_data/mean_analysis/'+DIR+'/var_0x_1024.npy')
std_err_0x = np.load('/home/vereese/git/phd_data/mean_analysis/'+DIR+'/std_err_0x_1024.npy')

means_0y = np.load('/home/vereese/git/phd_data/mean_analysis/'+DIR+'/means_0y_1024.npy')
var_0y = np.load('/home/vereese/git/phd_data/mean_analysis/'+DIR+'/var_0y_1024.npy')
std_err_0y = np.load('/home/vereese/git/phd_data/mean_analysis/'+DIR+'/std_err_0y_1024.npy')

plt.figure(0, figsize=[15,12])
plt.plot(frequencies[1:], means_0x[1:, 0]/std_err_0x[1:, 0])
plt.hlines(y=3, xmin=frequencies[1], xmax=frequencies[-1],color = 'r', linestyle = 'dashed')
plt.hlines(y=-3, xmin=frequencies[1], xmax=frequencies[-1],color = 'r', linestyle = 'dashed')
plt.xlim([frequencies[1], frequencies[-1]])
plt.xlabel("Frequency MHz")
plt.ylabel("X-pol real mean / SEM")
#plt.title("X-pol Real mean/SEM")
plt.grid()
plt.savefig('/home/vereese/Documents/PhD/CASPER2022/presentation/mean_re_div_sem_x', bbox_inches='tight')

plt.figure(1, figsize=[15,12])
plt.plot(frequencies[1:], means_0x[1:, 0], label='mean')
plt.plot(frequencies[1:], 3*std_err_0x[1:, 0], label='+3*SEM')
plt.plot(frequencies[1:], -3*std_err_0x[1:, 0], label='-3*SEM')
plt.xlim([frequencies[1], frequencies[-1]])
plt.xlabel("Frequency MHz")
plt.title("X-pol Real mean and 3*SEM")
plt.legend()
plt.grid()
plt.savefig('/home/vereese/Documents/PhD/CASPER2022/presentation/mean_re_3*sem_x', bbox_inches='tight')

plt.figure(2, figsize=[15,12])
plt.plot(frequencies[1:], means_0x[1:, 1]/std_err_0x[1:, 1])
plt.hlines(y=3, xmin=frequencies[1], xmax=frequencies[-1],color = 'r', linestyle = 'dashed')
plt.hlines(y=-3, xmin=frequencies[1], xmax=frequencies[-1],color = 'r', linestyle = 'dashed')
plt.xlim([frequencies[1], frequencies[-1]])
plt.xlabel("Frequency MHz")
plt.ylabel("X-pol imag mean / SEM")
#plt.title("X-pol Imag mean/SEM")
plt.grid()
plt.savefig('/home/vereese/Documents/PhD/CASPER2022/presentation/mean_im_div_sem_x', bbox_inches='tight')

plt.figure(3, figsize=[15,12])
plt.plot(frequencies[1:], means_0x[1:, 1], label='mean')
plt.plot(frequencies[1:], 3*std_err_0x[1:, 1], label='3*SEM')
plt.plot(frequencies[1:], -3*std_err_0x[1:, 1], label='-3*SEM')
plt.xlim([frequencies[1], frequencies[-1]])
plt.xlabel("Frequency MHz")
#plt.title("X-pol Imag mean and 3*SEM")
plt.legend()
plt.grid()
plt.savefig('/home/vereese/Documents/PhD/CASPER2022/presentation/mean_im_3*sem_x', bbox_inches='tight')

plt.figure(4, figsize=[15,12])
plt.plot(frequencies[1:], np.sqrt(var_0x[1:, 1]))
plt.xlim([frequencies[1], frequencies[-1]])
#plt.title("X-pol Imag std deviation")
plt.legend()
plt.xlabel("Frequency MHz")
plt.grid()

plt.figure(5, figsize=[15,12])
plt.plot(frequencies[1:], means_0y[1:, 0]/std_err_0y[1:, 0])
plt.hlines(y=3, xmin=frequencies[1], xmax=frequencies[-1],color = 'r', linestyle = 'dashed')
plt.hlines(y=-3, xmin=frequencies[1], xmax=frequencies[-1],color = 'r', linestyle = 'dashed')
plt.xlim([frequencies[1], frequencies[-1]])
plt.xlabel("Frequency MHz")
plt.ylabel("Y-pol real mean / SEM")
#plt.title("Y-pol Real mean/SEM")
plt.grid()
plt.savefig('/home/vereese/Documents/PhD/CASPER2022/presentation/mean_re_div_sem_y', bbox_inches='tight')

plt.figure(6, figsize=[15,12])
plt.plot(frequencies[1:], means_0y[1:, 0], label='mean')
plt.plot(frequencies[1:], 3*std_err_0y[1:, 0], label='+3*SEM')
plt.plot(frequencies[1:], -3*std_err_0y[1:, 0], label='-3*SEM')
plt.xlim([frequencies[1], frequencies[-1]])
plt.xlabel("Frequency MHz")
plt.title("Y-pol Real mean and 3*SEM")
plt.legend()
plt.grid()
#plt.savefig('/home/vereese/Documents/PhD/CASPER2022/presentation/mean_re_3*sem_y', bbox_inches='tight')

plt.figure(7, figsize=[15,12])
plt.plot(frequencies[1:], means_0y[1:, 1]/std_err_0y[1:, 1])
plt.hlines(y=3, xmin=frequencies[1], xmax=frequencies[-1],color = 'r', linestyle = 'dashed')
plt.hlines(y=-3, xmin=frequencies[1], xmax=frequencies[-1],color = 'r', linestyle = 'dashed')
plt.xlim([frequencies[1], frequencies[-1]])
plt.xlabel("Frequency MHz")
plt.ylabel("Y-pol imag mean / SEM")
#plt.title("Y-pol Imag mean/SEM")
plt.grid()
plt.savefig('/home/vereese/Documents/PhD/CASPER2022/presentation/mean_im_div_sem_y', bbox_inches='tight')

plt.figure(8, figsize=[15,12])
plt.plot(frequencies[1:], means_0y[1:, 1], label='mean')
plt.plot(frequencies[1:], 3*std_err_0y[1:, 1], label='3*SEM')
plt.plot(frequencies[1:], -3*std_err_0y[1:, 1], label='-3*SEM')
plt.xlim([frequencies[1], frequencies[-1]])
plt.xlabel("Frequency MHz")
plt.title("Y-pol Imag mean and 3*SEM")
plt.legend()
plt.grid()
#plt.savefig('/home/vereese/Documents/PhD/CASPER2022/presentation/mean_im_3*sem_y', bbox_inches='tight')

plt.figure(9, figsize=[15,12])
plt.plot(frequencies[1:], np.sqrt(var_0y[1:, 1]))
plt.xlim([frequencies[1], frequencies[-1]])
plt.title("Y-pol Imag std deviation")
plt.legend()
plt.xlabel("Frequency MHz")
plt.grid()

plt.show()